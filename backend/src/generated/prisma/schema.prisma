// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum USER_ROLE {
  admin
  user
}

enum PROBLEM_DIFFICULTY {
  easy
  medium
  hard
}

model User {
  id                              String    @id @default(uuid())
  username                        String
  email                           String    @unique
  password                        String
  avatar_url                      String    @default("https://placehold.co/600x400/orange/white")
  is_verified                     Boolean   @default(false)
  role                            USER_ROLE @default(user)
  problems                        Problem[]
  refresh_token                   String?
  email_verification_token        String?
  email_verification_token_expiry DateTime?
  password_reset_token            String?
  password_reset_token_expiry     DateTime?
  createdAt                       DateTime  @default(now())
  updatedAt                       DateTime  @updatedAt
}

model Problem {
  id                  String             @id @default(uuid())
  title               String
  description         String
  difficulty          PROBLEM_DIFFICULTY
  tags                String[]
  created_by          String
  examples            Json
  constraints         String
  hints               String?
  editorial           String?
  test_cases          Json
  code_snippets       Json
  reference_solutions Json
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt
  user                User               @relation(fields: [created_by], references: [id], onDelete: Cascade)
}
